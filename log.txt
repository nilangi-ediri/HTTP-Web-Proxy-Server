Commit: 518bf88
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 16:12:32 2025 +1030

Summary:
Added log.txt and README.md

Description:

------------------------

Commit: b6908fd
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 16:11:11 2025 +1030

Summary:
Update log.txt due to format issue.

Description:

------------------------

Commit: 96f675f
Author: Nilangi Edirisinghe
Date: Mon Mar 31 16:07:51 2025 +1030

Summary:
Updated README.md with further refinements for my future reference.

Description:

------------------------

Commit: 9f80ff5
Author: Nilangi Edirisinghe
Date: Mon Mar 31 16:06:48 2025 +1030

Summary:
Delete log.txt

Description:

------------------------

Commit: 1d540b0
Author: Nilangi Edirisinghe
Date: Mon Mar 31 16:02:38 2025 +1030

Summary:
Updated README.md further explaining what I have done - for my future reference.

Description:

------------------------

Commit: 7945f5a
Author: Nilangi Edirisinghe
Date: Mon Mar 31 15:58:43 2025 +1030

Summary:
UpdateD README.md for my future reference.

Description:

------------------------

Commit: 7107ff7
Author: Nilangi Edirisinghe
Date: Mon Mar 31 15:55:53 2025 +1030

Summary:
Updated README.md

Description:

------------------------

Commit: 6dee52c
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 15:37:09 2025 +1030

Summary:
 Updated log.txt

Description:

------------------------

Commit: 7c31ca3
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 14:39:12 2025 +1030

Summary:
Added "INSERT CODE" comment blocks as I had replaced those when editing.

Description:
Added "INSERT CODE" and "END CODE INSERT" comment blocks as I had replaced those when editing, as Gradescope checks for it and so that it will be helpful for the marker.

------------------------

Commit: bdf7e3f
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 14:14:45 2025 +1030

Summary:
Deleted all cached files to keep the repo fresh.

Description:

------------------------

Commit: e4372e2
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 14:12:32 2025 +1030

Summary:
Final Testing Done for Proxy.py

Description:

------------------------

Commit: 94e2eeb
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 13:29:24 2025 +1030

Summary:
Added prefetching and caching of HTML-linked resources (href/src) and tested.

Description:
- Extracted all href and src links from the HTML response of the main webpage using regex.
- Used urljoin() to convert relative URLs to absolute URLs based on the current hostname and port.
- For each extracted resource, established a connection to the appropriate origin server and sent a GET request to prefetch it.
- The response from the server was handled and cached using the same caching process as the main request, including:
   --- Creating cache file paths based on hostname, port, and resource path.
   --- Respecting Cache-Control headers (e.g., max-age) for expiration.
   --- Writing the response and metadata (timestamp and max-age) to cache files.
- Prefetched files are stored locally but not sent to the client unless requested.
- Handled exceptions to ensure proxy stability even if a prefetch attempt fails.

------------------------

Commit: 9fcd9f3
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 11:58:29 2025 +1030

Summary:
Working first step to pre-fetch the associated files of the main webpage and cache them in the proxy server.

Description:
1. Decoded response to string readable format from binary format, to pre-fetch the associated files of the main webpage.

2. Searched and extracted the href and src links using regx module.

3. Imported urljoin.

4. Applied urljoin() to convert any relative URLs  into absolute URLs using the base URL from the original request (http://{hostname}:{port}).

5. Printed these absolute URLs for verification. In a full implementation, these would be prefetched and cached.

------------------------

Commit: f78551c
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 11:02:54 2025 +1030

Summary:
Tested Caching Behaviour after Enabling the ability to handle origin server ports that are specified in the URL.

Description:
Works well after adding port number to cache location.
Tested with: "http://portquiz.net:8080", "http://portquiz.net:666"

------------------------

Commit: 384cb1a
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 10:54:50 2025 +1030

Summary:
Tested the the ability to handle origin server ports that are specified in the URL.

Description:
Tested using http://portquiz.net:8080/ and it worked well.

However one error was detected - a cache hit occured when I tested with http://portquiz.net:666.

This means the cache location path did not include the port number and did not check for it.

Therefore the port number was added to cache location.

------------------------

Commit: 7f957e6
Author: Nilangi-Edirisinghe
Date: Mon Mar 31 10:33:38 2025 +1030

Summary:
Add the ability to handle origin server ports that are specified in the URL.

Description:
Split the host name and extracted the port number to enable handle origin server ports that are specified in the URL.

------------------------

Commit: e61a84c
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 22:31:07 2025 +1030

Summary:
Updated log.txt due to formatting error.

Description:

------------------------

Commit: fa724cb
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 22:24:15 2025 +1030

Summary:
Created log.txt in utf-8 format with commits and descriptions upto now.

Description:

------------------------

Commit: 9bcf33d
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 22:22:29 2025 +1030

Summary:
Deleted still remaining git log files.

Description:

------------------------

Commit: d6949d9
Author: Nilangi Edirisinghe
Date: Thu Mar 27 22:20:48 2025 +1030

Summary:
Deleted all previous git-log files.

Description:

------------------------

Commit: 6567f36
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 22:13:52 2025 +1030

Summary:
Saved git-commits.txt as utf-8 to fix error.

Description:

------------------------

Commit: e07870c
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 22:12:13 2025 +1030

Summary:
Created git-commits.txt again due to Gradescope not displaying it.

Description:

------------------------

Commit: 5b40944
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 22:06:29 2025 +1030

Summary:
Created git log file to update it and fix git log file not displaying error.

Description:

------------------------

Commit: 1a8ae8a
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 21:54:36 2025 +1030

Summary:
Handling expires date - When max_age is not there, only Expires header exists.

Description:
Handled Expires Header, prioritized "max-age" derivative over "Expires" header when both are present as per RFC rules.

Tested this behaviour thoroughly using mock GET request with Expires header and max-age derivative.

Printed exception for debugging purposes.

Imported several time related libraries for time zone conversions. Expiration calculations are done after converting to GMT time and then to epochs.

------------------------

Commit: 845f9ba
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 20:27:19 2025 +1030

Summary:
Tested proxy.bonus.py behavior due to expires header and fixed errors.

Description:
1. Cache hit did not occur due to split error as I had split headers of the cache file without reading the file first. Therefore, read() was added.

2. Second split error - The headers were not separated as expected. The error was fixed by only splitting with '\n' instead of '\r\n'. This occurred as the cacheFile is read as a string, not in binary format.

3. Removed print statement that was used to debug the code.

------------------------

Commit: 0a3f7b9
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 19:41:43 2025 +1030

Summary:
Tested proxy.py for every case denoted in assignment.

Description:
Everything works successfully except for when an image is requested, the response image cannot be opened via curl or VS code. But when requested via the browser from our proxy, the image is displayed without errors.

------------------------

Commit: 70c713e
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 18:56:14 2025 +1030

Summary:
Checks if header is an Expires header, splits it, extracts the date value and stores in expires_date variable.

Description:
Print command added for testing.

------------------------

Commit: 9235e7d
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 18:42:15 2025 +1030

Summary:
Extracting headers from cached file and Checking if cached headers have max-age directive.

Description:
Checking this because the RFC says to give priority to max-age even when Expires header is present:

" Note: if a response includes a Cache-Control field with the max-age directive, that directive overrides the Expires field.".

------------------------

Commit: 0eb33b8
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 17:51:29 2025 +1030

Summary:
Created proxy-bonus.py

Description:

------------------------

Commit: ec97f56
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 17:40:00 2025 +1030

Summary:
Tested Caching Difference between 301 and 302.

Description:
Results:
--- 301 caches the response.
--- 302 does not cache response or the redirected web page in general.
--- 302 specified with max-age cache control header is cached.

------------------------

Commit: 621254d
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 17:20:28 2025 +1030

Summary:
To stop redirected 302 webpage (new location) getting cached - the scope of cache_allowed flag was changed.

Description:
1. Instead of its previous location, the cache-allowed flag was taken out of the infinite while loop - so that when the proxy redirects to the new location, it does not cache it.

2. Comment was added to continue statement that loops back to process new location. When it comes to "continue" statement, caching is not allowed for 302 and will not happen as it loops back to beginning of while loop.

3. Setting cache_allowed to True at the end of the while loop - After handling a request from the user, to give permission to cache in general.

------------------------

Commit: 7022c4e
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 16:58:13 2025 +1030

Summary:
Tested if Proxy caches the response of 302 - Error Detected

Description:
As I had handled redirection before by redirecting to the new location, even if the 302 response is not cached, the redirected web page was cached - which is an error.

------------------------

Commit: 8b2c4f4
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 16:47:08 2025 +1030

Summary:
Added cache_allowed flag to handle 302 - If cache-control header max-age is specified, response is cached.

Description:
As RFC says - This response is only cacheable if indicated by a Cache-Control or Expires header field.

Additionally, added comments to modified code for handling 302.

------------------------

Commit: e7928e3
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 16:34:40 2025 +1030

Summary:
Handling 302 Found - Edited the cache allowed flag to not cache for 302 responses.

Description:
Reflects the non-caching behavior that the RFC says for 302 Found:
"This response is only cacheable if indicated by a Cache-Control or Expires header field."

------------------------

Commit: bb284e5
Author: Nilangi-Edirisinghe
Date: Thu Mar 27 16:26:54 2025 +1030

Summary:
Tested if the proxy handles a page that is not found correctly.

Description:
Result: The proxy forwards 404 Not Found Error transparently as the origin server sends. No modification to this was done as the RFC does not tell us to do any modifications to 404 response.

------------------------

Commit: dc009ed
Author: Nilangi-Edirisinghe
Date: Mon Mar 24 23:55:47 2025 +1030

Summary:
Add log.txt with commit history upto now

Description:

------------------------

Commit: 7eff00d
Author: Nilangi-Edirisinghe
Date: Mon Mar 24 23:54:10 2025 +1030

Summary:
Testing the Web Proxy with Curl

Description:

------------------------

Commit: e782c12
Author: Nilangi-Edirisinghe
Date: Fri Mar 21 23:32:12 2025 +1030

Summary:
Adding Warning 113 Heuristic Expiration Header to Cached Response if Current Age of Response is more than 24 hours, according to RFC 2616.

Description:
RFC says: The cache MUST attach Warning 113 to any response whose age is more than 24 hours if such warning has not already been added. Therefore, if current age is greater than 24 hours, the warning is added as a headre to the cacheData and sent to the client.

------------------------

Commit: f77df1f
Author: Nilangi-Edirisinghe
Date: Fri Mar 21 22:48:39 2025 +1030

Summary:
Performing Expiration Calculations according to RFC 2616. Thus, the previous variable names were changed to match the RFC and calculations were redone to check if cache has expired, in terms of response_is_fresh, freshness lifetime and current age.

Description:

------------------------

Commit: 3ebc352
Author: Nilangi-Edirisinghe
Date: Fri Mar 21 21:58:33 2025 +1030

Summary:
When max_age does not appear, computing freshness lifetime using a heuristic - setting as 2 days and writing expiry time into cache meta file.

Description:
RFC says: If max_age does not appear in response, the cache MAY compute a freshness lifetime using a heuristic.
Therefore, max_age (freshness lifetime) is set to 2 days when max_age == None.
Then, the computed expiry time to the cache control file is written after opening it. It is computed by adding current time (Time in seconds since the epoch) to max age.

------------------------

Commit: c0ada90
Author: Nilangi-Edirisinghe
Date: Fri Mar 21 21:38:30 2025 +1030

Summary:
If cache expired, Raising error so that the program goes to except block and contacts the origin server.

Description:

------------------------

Commit: 9338e97
Author: Nilangi-Edirisinghe
Date: Fri Mar 21 21:29:25 2025 +1030

Summary:
Opening cache control file, reading the expiry time calculated and checking if the cache file has expired

Description:
Defining the cache meta file path
Checking if the cache file and the cache_control file exists
Opening the cache_control file in read mode
Read the file and retrieve the calculated expiry time
Checking if current time is greater than expiry time (If expiry time has passed or not)

------------------------

Commit: 291a9a4
Author: Nilangi-Edirisinghe
Date: Fri Mar 21 21:14:21 2025 +1030

Summary:
Resolving error with matching cache-control header due to case sensitivity, initializing max_age as None and changing cache file open to with open block.

Description:

------------------------

Commit: b864d85
Author: Nilangi-Edirisinghe
Date: Tue Mar 18 23:58:21 2025 +1030

Summary:
Implemented cache-control header parsing to determine caching eligibility.

Description:
Extracted response headers from the server response and saved them in a list.

Iterated through each header to check if it is a Cache-Control header.

Used regex to search for the max-age value and extract it.

If max-age=0, caching is not allowed, and a message is printed to indicate this.

Otherwise, the max-age value is extracted, converted to an integer, and printed to show how long the response can be cached.

Created a flag (cache_allowed) to determine if caching should happen.

------------------------

Commit: 680189a
Author: Nilangi-Edirisinghe
Date: Tue Mar 18 21:13:43 2025 +1030

Summary:
Changes occured in cached file as I deleted it for testing purposes.

Description:

------------------------

Commit: f8382fc
Author: Nilangi-Edirisinghe
Date: Tue Mar 18 21:12:35 2025 +1030

Summary:
Handling redirection - Added a redirection flag to change the flow of the program when redirection occurs.

Description:
1. Defined redirection flag and location.
2. Added 'if not redirection flag' condition and included the normal behavior there via indentation.
3. For the else part of the above condition (when redirection flag = 1, redirection occurs) the URI is set to the new redirected location extracted.
4. Redirection flag is updated to 1, when redirection status is detected and redirected location is extracted.
5. Redirection flag is set to 0 for normal behavior without redirection.

------------------------

Commit: ac77975
Author: Nilangi-Edirisinghe
Date: Tue Mar 18 19:51:55 2025 +1030

Summary:
Detecting redirected web pages in the response, searching for the redirected location and extracting the new location.

Description:
1. Detecting if there are redirected web pages in the response
2. Using regx library, searching for the redirected location.
3. Extracting the new location from the returned regx search result.

------------------------

Commit: 84b80ac
Author: Nilangi-Edirisinghe
Date: Tue Mar 18 19:22:56 2025 +1030

Summary:
Converting the binary response into string while ignoring decode errors.

Description:

------------------------

Commit: 06f4b83
Author: Nilangi-Edirisinghe
Date: Fri Mar 14 03:29:47 2025 +1030

Summary:
Added 'INSERT CODE' block as removing it caused Gradescope Skeleton Code Check Error.

Description:

------------------------

Commit: 4067736
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 20:56:26 2025 +1030

Summary:
Error correcting at Cache Hit - when reading a cached file.

Description:
When I tested using curl - I tested using " curl -iS http://localhost:8080/http://http.badssl.com/" for the second time, to see if the cache-hit scenario works fine.
There was an error at Cache Hit - the server would print it is a cache hit, but the file was not sent to the client from the cache and the origin server was contacted.
I went through trial and error several times and solved the issue. The issues were: the file was not opened in the binary format, the use of readlines command and concatenating issue with string '>' and binary cacheData.

Hence, the cache file opening format was changed to 'rb', used 'read' command to read cacheFile and printed cacheData separately.

------------------------

Commit: f094ca6
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 20:17:49 2025 +1030

Summary:
Correcting the error "failed to accept connection" after testing with Telnet client.

Description:
For clarity, I had added clientAddress to be displayed when the proxy server accepts the client's connection. I had used "+" which gave the error when testing the proxy server using Telnet client. I changed it to a comma and added the clientAddress to be displayed.

------------------------

Commit: afa1cdb
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 20:03:58 2025 +1030

Summary:
Writing the response received from origin server to cacheFile. (Saving the response from origin server)

Description:

------------------------

Commit: 365ba0f
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 19:56:31 2025 +1030

Summary:
Sending the response taken from origin server to client using sendall method.

Description:

------------------------

Commit: aafa0b1
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 19:54:44 2025 +1030

Summary:
Received the response from the origin server.

Description:

------------------------

Commit: 370a6ee
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 19:51:32 2025 +1030

Summary:
Update the HTTP request line and header.

Description:
The resource that had been extracted from URI was used for the HTTP request line and the extracted hostname was used for the header line.

------------------------

Commit: c6214ac
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 19:29:43 2025 +1030

Summary:
Created socket to connect with origin server and created connection with origin server. Port was given as 80.

Description:

------------------------

Commit: 7dd8232
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 19:20:28 2025 +1030

Summary:
When it is a Cache Hit - send data using "socket.sendall" method to ensure all data is sent.

Description:

------------------------

Commit: 5129557
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 19:14:24 2025 +1030

Summary:
Added try except block to handle errors when getting HTTP request from client and storing it.

Description:

------------------------

Commit: e53af0d
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 18:57:49 2025 +1030

Summary:
Got HTTP request from client and stored as message_bytes

Description:

------------------------

Commit: 469cff8
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 18:45:42 2025 +1030

Summary:
Renamed file into Proxy.py according to given submission instructions.

Description:
I did not notice the file name should be changed, and I had already started creating server socket, binding. listening and accepting. After that I renamed the file to Proxy.py.

------------------------

Commit: 484ac32
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 18:38:37 2025 +1030

Summary:
Accepted client connection and stored in clientSocket and clientAddress

Description:

------------------------

Commit: 6918804
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 18:28:46 2025 +1030

Summary:
Listening to socket, allowing 3 to queue

Description:

------------------------

Commit: 68ec1ed
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 18:09:32 2025 +1030

Summary:
Binding Server Socket

Description:

------------------------

Commit: 50facec
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 17:32:33 2025 +1030

Summary:
Created Server Socket

Description:

------------------------

Commit: c4218d0
Author: Nilangi-Edirisinghe
Date: Thu Mar 13 17:16:36 2025 +1030

Summary:
Added Given Skeleton Code

Description:
Added Proxy-skeleton(2025).py

------------------------

Commit: 9cf40b4
Author: Nilangi Edirisinghe
Date: Thu Mar 13 15:44:41 2025 +1030

Summary:
Initial commit

Description:

------------------------
